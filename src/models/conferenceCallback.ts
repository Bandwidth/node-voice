/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { number, object, optional, Schema, string } from '../schema';

/** This object represents all possible fields that may be included in callbacks related to conference events */
export interface ConferenceCallback {
  conferenceId?: string;
  name?: string;
  eventType?: string;
  eventTime?: string;
  tag?: string;
  callId?: string;
  to?: string;
  from?: string;
  accountId?: string;
  recordingId?: string;
  channels?: number;
  startTime?: string;
  endTime?: string;
  duration?: string;
  fileFormat?: string;
  mediaUrl?: string;
  status?: string;
}

export const conferenceCallbackSchema: Schema<ConferenceCallback> = object({
  conferenceId: ['conferenceId', optional(string())],
  name: ['name', optional(string())],
  eventType: ['eventType', optional(string())],
  eventTime: ['eventTime', optional(string())],
  tag: ['tag', optional(string())],
  callId: ['callId', optional(string())],
  to: ['to', optional(string())],
  from: ['from', optional(string())],
  accountId: ['accountId', optional(string())],
  recordingId: ['recordingId', optional(string())],
  channels: ['channels', optional(number())],
  startTime: ['startTime', optional(string())],
  endTime: ['endTime', optional(string())],
  duration: ['duration', optional(string())],
  fileFormat: ['fileFormat', optional(string())],
  mediaUrl: ['mediaUrl', optional(string())],
  status: ['status', optional(string())],
});
