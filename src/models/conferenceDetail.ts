/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  ConferenceEventMethodEnum,
  conferenceEventMethodEnumSchema,
} from './conferenceEventMethodEnum';
import {
  ConferenceMemberDetail,
  conferenceMemberDetailSchema,
} from './conferenceMemberDetail';

export interface ConferenceDetail {
  id?: string;
  name?: string;
  createdTime?: string;
  completedTime?: string;
  conferenceEventUrl?: string;
  conferenceEventMethod?: ConferenceEventMethodEnum;
  tag?: string;
  activeMembers?: ConferenceMemberDetail[];
}

export const conferenceDetailSchema: Schema<ConferenceDetail> = object({
  id: ['id', optional(string())],
  name: ['name', optional(string())],
  createdTime: ['createdTime', optional(string())],
  completedTime: ['completedTime', optional(string())],
  conferenceEventUrl: ['conferenceEventUrl', optional(string())],
  conferenceEventMethod: [
    'conferenceEventMethod',
    optional(conferenceEventMethodEnumSchema),
  ],
  tag: ['tag', optional(string())],
  activeMembers: [
    'activeMembers',
    optional(array(lazy(() => conferenceMemberDetailSchema))),
  ],
});
