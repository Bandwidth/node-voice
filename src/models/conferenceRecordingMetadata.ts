/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { number, object, optional, Schema, string } from '../schema';
import { FileFormatEnum, fileFormatEnumSchema } from './fileFormatEnum';

export interface ConferenceRecordingMetadata {
  accountId?: string;
  conferenceId?: string;
  name?: string;
  recordingId?: string;
  /** Format is ISO-8601 */
  duration?: string;
  channels?: number;
  startTime?: string;
  endTime?: string;
  fileFormat?: FileFormatEnum;
  /** The current status of the recording. Current possible values are 'processing', 'partial', 'complete', 'deleted', and 'error'. Additional states may be added in the future, so your application must be tolerant of unknown values. */
  status?: string;
  mediaUrl?: string;
}

export const conferenceRecordingMetadataSchema: Schema<ConferenceRecordingMetadata> = object(
  {
    accountId: ['accountId', optional(string())],
    conferenceId: ['conferenceId', optional(string())],
    name: ['name', optional(string())],
    recordingId: ['recordingId', optional(string())],
    duration: ['duration', optional(string())],
    channels: ['channels', optional(number())],
    startTime: ['startTime', optional(string())],
    endTime: ['endTime', optional(string())],
    fileFormat: ['fileFormat', optional(fileFormatEnumSchema)],
    status: ['status', optional(string())],
    mediaUrl: ['mediaUrl', optional(string())],
  }
);
