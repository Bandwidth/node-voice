/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import { Diversion, diversionSchema } from './diversion';
import { Transcription, transcriptionSchema } from './transcription';

/** This object represents all possible fields that may be included in callbacks related to call events, including events that come from BXML verbs */
export interface CallCallback {
  eventType?: string;
  eventTime?: string;
  accountId?: string;
  applicationId?: string;
  from?: string;
  to?: string;
  direction?: string;
  callId?: string;
  callUrl?: string;
  startTime?: string;
  answerTime?: string;
  transferCallerId?: string;
  transferTo?: string;
  cause?: string;
  errorMessage?: string;
  errorId?: string;
  endTime?: string;
  digit?: string;
  parentCallId?: string;
  recordingId?: string;
  duration?: string;
  fileFormat?: string;
  mediaUrl?: string;
  tag?: string;
  channels?: number;
  status?: string;
  digits?: string;
  terminatingDigit?: string;
  transcription?: Transcription;
  diversion?: Diversion;
}

export const callCallbackSchema: Schema<CallCallback> = object({
  eventType: ['eventType', optional(string())],
  eventTime: ['eventTime', optional(string())],
  accountId: ['accountId', optional(string())],
  applicationId: ['applicationId', optional(string())],
  from: ['from', optional(string())],
  to: ['to', optional(string())],
  direction: ['direction', optional(string())],
  callId: ['callId', optional(string())],
  callUrl: ['callUrl', optional(string())],
  startTime: ['startTime', optional(string())],
  answerTime: ['answerTime', optional(string())],
  transferCallerId: ['transferCallerId', optional(string())],
  transferTo: ['transferTo', optional(string())],
  cause: ['cause', optional(string())],
  errorMessage: ['errorMessage', optional(string())],
  errorId: ['errorId', optional(string())],
  endTime: ['endTime', optional(string())],
  digit: ['digit', optional(string())],
  parentCallId: ['parentCallId', optional(string())],
  recordingId: ['recordingId', optional(string())],
  duration: ['duration', optional(string())],
  fileFormat: ['fileFormat', optional(string())],
  mediaUrl: ['mediaUrl', optional(string())],
  tag: ['tag', optional(string())],
  channels: ['channels', optional(number())],
  status: ['status', optional(string())],
  digits: ['digits', optional(string())],
  terminatingDigit: ['terminatingDigit', optional(string())],
  transcription: ['transcription', optional(lazy(() => transcriptionSchema))],
  diversion: ['diversion', optional(lazy(() => diversionSchema))],
});
