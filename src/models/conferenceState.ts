/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  nullable,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ConferenceEventMethodEnum,
  conferenceEventMethodEnumSchema,
} from './conferenceEventMethodEnum';
import {
  ConferenceMemberState,
  conferenceMemberStateSchema,
} from './conferenceMemberState';

export interface ConferenceState {
  id?: string;
  name?: string;
  createdTime?: string;
  completedTime?: string | null;
  conferenceEventUrl?: string | null;
  conferenceEventMethod?: ConferenceEventMethodEnum | null;
  tag?: string | null;
  activeMembers?: ConferenceMemberState[];
}

export const conferenceStateSchema: Schema<ConferenceState> = object({
  id: ['id', optional(string())],
  name: ['name', optional(string())],
  createdTime: ['createdTime', optional(string())],
  completedTime: ['completedTime', optional(nullable(string()))],
  conferenceEventUrl: ['conferenceEventUrl', optional(nullable(string()))],
  conferenceEventMethod: [
    'conferenceEventMethod',
    optional(nullable(conferenceEventMethodEnumSchema)),
  ],
  tag: ['tag', optional(nullable(string()))],
  activeMembers: [
    'activeMembers',
    optional(array(lazy(() => conferenceMemberStateSchema))),
  ],
});
