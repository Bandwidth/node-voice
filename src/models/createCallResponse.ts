/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { nullable, number, object, optional, Schema, string } from '../schema';
import {
  AnswerFallbackMethodEnum,
  answerFallbackMethodEnumSchema,
} from './answerFallbackMethodEnum';
import { AnswerMethodEnum, answerMethodEnumSchema } from './answerMethodEnum';
import {
  DisconnectMethodEnum,
  disconnectMethodEnumSchema,
} from './disconnectMethodEnum';

export interface CreateCallResponse {
  accountId: string;
  callId: string;
  applicationId: string;
  to: string;
  from: string;
  enqueuedTime?: string;
  callUrl: string;
  callTimeout?: number;
  callbackTimeout?: number;
  answerUrl: string;
  answerMethod: AnswerMethodEnum;
  answerFallbackUrl?: string | null;
  answerFallbackMethod?: AnswerFallbackMethodEnum | null;
  disconnectUrl?: string | null;
  disconnectMethod: DisconnectMethodEnum | null;
  username?: string | null;
  password?: string | null;
  fallbackUsername?: string | null;
  fallbackPassword?: string | null;
  tag?: string | null;
  priority?: number | null;
}

export const createCallResponseSchema: Schema<CreateCallResponse> = object({
  accountId: ['accountId', string()],
  callId: ['callId', string()],
  applicationId: ['applicationId', string()],
  to: ['to', string()],
  from: ['from', string()],
  enqueuedTime: ['enqueuedTime', optional(string())],
  callUrl: ['callUrl', string()],
  callTimeout: ['callTimeout', optional(number())],
  callbackTimeout: ['callbackTimeout', optional(number())],
  answerUrl: ['answerUrl', string()],
  answerMethod: ['answerMethod', answerMethodEnumSchema],
  answerFallbackUrl: ['answerFallbackUrl', optional(nullable(string()))],
  answerFallbackMethod: [
    'answerFallbackMethod',
    optional(nullable(answerFallbackMethodEnumSchema)),
  ],
  disconnectUrl: ['disconnectUrl', optional(nullable(string()))],
  disconnectMethod: ['disconnectMethod', nullable(disconnectMethodEnumSchema)],
  username: ['username', optional(nullable(string()))],
  password: ['password', optional(nullable(string()))],
  fallbackUsername: ['fallbackUsername', optional(nullable(string()))],
  fallbackPassword: ['fallbackPassword', optional(nullable(string()))],
  tag: ['tag', optional(nullable(string()))],
  priority: ['priority', optional(nullable(number()))]
});
